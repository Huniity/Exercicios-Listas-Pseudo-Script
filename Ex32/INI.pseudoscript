#Ex32

funcao busca_binaria():
  esquerda = 0
  idx_max = tamanho(array_1) - 1
  direita = idx_max
  meio = 0

  enquanto esquerda <= direita 
    meio = (direita + esquerda) % 2
      se meio não for inteiro
        meio = meio -1

    se array_1[meio] > numero_escolhido
      esquerda = meio - 1

      ou se array_1[meio] < numero_escolhido
        direita = meio -1

      ou se array_1[meio] == numero_escolhido
      retorne = meio

  retorne não_encontrado

array_1 = [7, 13, 23, 30, 34]
  entrada("Por favor introduza um número para tentarmos encontrá-lo com uma búsca binária", numero_escolhido)

resultado = busca_linear(array_1, numero_escolhido)
  se resultado != não_encontrado
    imprime("O seu numero esta présente no array: " +array[meio]




#ex 33


funcao palindromo():
array_1 = [1, 2, 3, 2, 1]
array_revertido = []
index_a1 = tamanho(array_1) - 1
index_ini = 0
index_end = index_a1

enquanto index_a1 = tamanho.array_1 % 2
  para cada elemento em array_1
    se array_1[index_ini] == array_1[index_end]
      index_ini = index_ini + 1
      index_end = index_end -1
    retorne sim

retorne não

resultado = palindromo(array_1)
  se resultado = sim
    imprime("O seu array é um palíndromo")
  senao
    imprime("O seu array n\ao é um palíndromo")


#ex 34

entrada(" Por favor introduza o número de troca: ", numero_troca)
array_1 = [7, 13, 23, 30, 34]

imprime("O seu array original é assim: " + array_1 +)

array_1 = array_1[ - numero_troca :] + array_1[: - numero_troca]

imprime("O seu array modificado é assim: " + array_1 +)

#Ex35

vogais = [a, e, i, o, u]
string = "Eu sou o adrien"
tamanho = tamanho(string)
contador = 0

enquanto tamanho > 0 
  para cada letra em string
    se letra esta em array(vogais)
      contador = contador + 1
      tamanho = tamanho - 1
    senao
      continua()
imprime("A sua string contém: " + contador +)



#Ex36

array_1 = [7, 13, 23, 30, 34]
index_0 = 0
index_fim = tamanho(array_1) - 1
novo_array = []
tamanho(novo_array) = tamanho(array_1)

  enquanto index_fim >= 0
    para cada valor em array_1[::-1]
      novo_array.adicionar(valor[index_0])
        index_0 = index_0 + 1
          index_fim = index_fim -1

imprime("O seu array original é: " + array_1 + ", e o seu array revertido é: " + novo_array +).

#ex 37

string = "Eu sou o adrien"
tamanho_string = tamanho(string)
meio = tamanho_string % 2
  para cada letra em string(0, meio)
    se string[letra] != string[letra -1]
    return nao
    imprime("A sua string não é um palíndromo")
  imprime("A sua string é um palíndromo")

#Ex38

string1 = "Eu sou"
string2 = "o Adrien"
string_concatenada = string1 + "" + string2

#Ex39

string = "Eu sou o Adrien"
letra_a_substituir = o
letra_substituida = a
tamanho_string = tamanho(string)

enquanto tamanho_string > 0
  para cada letra em string
    se letra_a_substituir == letra
      letra == letra_substituida
        retorne string_nova

#Ex40

string = " Eu sou o Adrien"
espaco = " "
tamanho = tamanho(string)
array = []
index_l1 = 0

enquanto tamanho > 0
  para cada letra em string
      adicionar array[index_l1,0]
        se letra == espaco
          index_l1 = index_l1 +1
imprime(+ array +)
